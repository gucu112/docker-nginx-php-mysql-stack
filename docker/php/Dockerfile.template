# Set base docker image version
FROM php:$PHP_FPM_VERSION

# Create user and group
RUN addgroup --gid $GROUP_ID \
    --system php-data
RUN adduser --uid $USER_ID \
    --ingroup php-data \
    --system php-data

# Setup run directories
RUN mkdir -p /run
RUN chown -R php-data:php-data /run
RUN ln -s /run /var/run

# Create PID file and socket directory
RUN touch /var/run/php.pid
RUN mkdir /var/run/php

# Install system packages
RUN apt-get update && apt-get install -y \
    libmcrypt-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev

# Install PHP modules
RUN docker-php-ext-install \
    intl \
    sockets \
    pdo_mysql \
    opcache \
    zip

# Remove PHP source code
RUN docker-php-source delete

# Remove default configuration
RUN rm /usr/local/etc/php-fpm.d/www.conf
RUN rm /usr/local/etc/php-fpm.d/docker.conf
RUN rm /usr/local/etc/php-fpm.d/zz-docker.conf

# Copy over main configuration files
COPY ./config/php.ini /usr/local/etc/php/php.ini
COPY ./config/php-fpm.conf /usr/local/etc/php-fpm.conf

# Mount volume for other configuration files
VOLUME [ "/usr/local/etc/php-fpm.d" ]

# Create logging directory and files
RUN mkdir -p /var/log/php
RUN touch /var/log/php/error.log
RUN touch /var/log/php/fpm.general.log
RUN touch /var/log/php/fpm.slow.log
RUN touch /var/log/php/fpm.access.log

# Mount volume for log files
VOLUME [ "/var/log/php" ]

# Set permissions and ownerships
RUN chmod 755 /var/run/php
RUN chown -R php-data:php-data \
    /var/log/php \
    /var/run/php \
    /var/run/php.pid

# Specify entrypoint, user, working directory and default command
ENTRYPOINT [ "docker-php-entrypoint" ]
USER php-data
WORKDIR /var/www/html/default
CMD [ "php-fpm", "--nodaemonize" ]
